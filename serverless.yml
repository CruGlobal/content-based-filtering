service: content-based-filtering
frameworkVersion: '3'
configValidationMode: error
plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  stage: ${env:ENVIRONMENT}
  region: us-east-1
  vpc:
    securityGroupIds:
      - sg-888294ed
    subnetIds:
      - subnet-f2c2dfda # us-east-1a
      - subnet-1508db62 # us-east-1b
      - subnet-3fd94266 # us-east-1c
  stackTags:
    Name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}
    owner: apps@cru.org
    application: ${env:PROJECT_NAME}
    env: ${self:custom.environmentMap.${env:ENVIRONMENT}}
    managed_by: serverless-framework
    function: lambda
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:GetObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${env:S3_BUCKET_NAME}
            - arn:aws:s3:::${env:S3_BUCKET_NAME}/*
  apiGateway:
    apiKeys:
      - name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}-webhookApiKey
        description: API Key for authorizing webhook requests
        value: ${env:WEBHOOK_API_KEY}
    usagePlan:
      quota:
        limit: 3000
        period: MONTH
      throttle:
        burstLimit: 1
        rateLimit: 1
  environment: ${file(env.js)}
  layers:
    - arn:aws:lambda:us-east-1:072686360478:layer:node-16_14_2:1

package:
  individually: true
  patterns:
    - 'keyfile.json'
    - '!test/**'
    - '!**/*.test.js'
    - '!.deployment/**'

custom:
  environmentMap:
    production: prod
    staging: stage
    development: dev
    lab: lab

functions:
  handler:
    handler: src/index.handler
    timeout: 30
    events:
      - schedule: rate(10 minutes)
      - http: # See https://www.serverless.com/framework/docs/providers/aws/events/apigateway/
          path: webhook
          method: post
          cors: true # See https://www.serverless.com/framework/docs/providers/aws/events/apigateway#enabling-cors
          private: true # requires apiGateway apiKey
